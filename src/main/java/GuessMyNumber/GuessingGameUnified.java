package GuessMyNumber;

import javax.swing.*;

public class GuessingGameUnified {

    public static void main(String[] args) {
        boolean useDetailedStyle = true;

        playGame(useDetailedStyle);
    }

    public static void playGame(boolean useDetailedStyle) {
        int secretNumber = (int) (Math.random() * 100 + 1);
        int userGuess = 0;
        int attempt = 1;

        System.out.println("–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏): " + secretNumber);

        while (userGuess != secretNumber) {
            String input = JOptionPane.showInputDialog(null,
                    "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100", "–ò–≥—Ä–∞: –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ", JOptionPane.INFORMATION_MESSAGE);

            if (input == null) {
                JOptionPane.showMessageDialog(null, "–ò–≥—Ä–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞.");
                return;
            }

            try {
                userGuess = Integer.parseInt(input);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.");
                continue;
            }

            String message = useDetailedStyle
                    ? generateMessageCase(userGuess, secretNumber, attempt)
                    : generateMessageSimple(userGuess, secretNumber, attempt);

            JOptionPane.showMessageDialog(null, message);
            attempt++;
        }

        int choice = JOptionPane.showConfirmDialog(null,
                "–í—ã —Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â—ë —Ä–∞–∑?", "–ü–æ–±–µ–¥–∞!", JOptionPane.YES_NO_OPTION);

        if (choice == JOptionPane.YES_OPTION) {
            playGame(useDetailedStyle);
        } else {
            JOptionPane.showMessageDialog(null, "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É!");
        }
    }

    public static String generateMessageCase(int guess, int secret, int attempts) {
        String word = (attempts == 1) ? " –ø–æ–ø—ã—Ç–∫–∞." : " –ø–æ–ø—ã—Ç–æ–∫.";

        if (guess <= 0 || guess > 100) {
            return "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥! –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 100.";
        } else if (guess == secret) {
            return "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ!\n–í—Å–µ–≥–æ: " + attempts + word;
        } else if (guess > secret) {
            return "–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: " + attempts + word;
        } else {
            return "–°–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–æ–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: " + attempts + word;
        }
    }

    public static String generateMessageSimple(int guess, int secret, int attempt) {
        if (guess <= 0 || guess > 100) {
            return "–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100.";
        } else if (guess == secret) {
            return "–í–µ—Ä–Ω–æ! üéØ –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ –∑–∞ " + attempt + " –ø–æ–ø—ã—Ç–æ–∫.";
        } else if (guess > secret) {
            return "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –º–µ–Ω—å—à–µ.\n–ü–æ–ø—ã—Ç–∫–∞ ‚Ññ" + attempt;
        } else {
            return "–°–ª–∏—à–∫–æ–º –º–∞–ª–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –±–æ–ª—å—à–µ.\n–ü–æ–ø—ã—Ç–∫–∞ ‚Ññ" + attempt;
        }
    }
}
